syntax = "proto3";

package comment.v1;
option go_package="proto/comment/v1;commentv1";

service CommentService {
  // GetCommentList Comment的id为0 获取一级评论
  rpc GetCommentList (CommentListRequest) returns (CommentListResponse);

  // DeleteComment 删除评论，删除本评论和其子评论
  rpc DeleteComment (DeleteCommentRequest) returns (DeleteCommentResponse);

  // CreateComment 创建评论
  rpc CreateComment (CreateCommentRequest) returns (CreateCommentResponse);

  rpc GetMoreReplies(GetMoreRepliesRequest) returns (GetMoreRepliesResponse);

  rpc CountComment (CountCommentRequest) returns (CountCommentResponse);
}

message CommentListRequest {
  Biz biz = 1;
  int64 biz_id = 2;
  int64 cur_comment_id = 3;
  int64 limit = 4;
}

message CommentListResponse {
  repeated Comment comments = 1;
}

message DeleteCommentRequest {
  int64 comment_id = 1;
  int64 uid = 2;
}

message DeleteCommentResponse {
}

message CreateCommentRequest {
  Comment comment = 1;
}

// 异步执行，不返回commentId
message CreateCommentResponse {
}

message GetMoreRepliesRequest {
  int64 rid = 1;
  int64 cur_comment_id = 2;
  int64 limit = 3;
}

message GetMoreRepliesResponse {
  repeated Comment replies = 1;
}

enum Biz {
  Evaluation = 0;
  Question  = 1;
}

message Comment {
  int64 id = 1;
  int64 commentator_id = 2;
  Biz biz = 3;
  int64 biz_id = 4;
  string content = 5;
  Comment root_comment = 6;
  Comment parent_comment = 7;
  int64 reply_to_uid = 8;
  // 正常来说，你在时间传递上，如果不想用 int64 之类的
  // 就可以考虑使用这个 Timestamp
  int64 ctime = 9;
  int64 utime = 10;
}

message CountCommentRequest {
  Biz biz = 1;
  int64 biz_id = 2;
}

message CountCommentResponse {
  int64 count = 1;
}