// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/tag/v1/tag.proto

package tagv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 这个标签再加status的话感觉真的多余...,status的话就从evaluation服务聚合吧
// 因为标签是固定的，写死，所以枚举，规范来讲应该都大写吧，但是难读...
type AssessmentTag int32

const (
	AssessmentTag_OpenBookExamination   AssessmentTag = 0 // 开卷考试
	AssessmentTag_ClosedBookExamination AssessmentTag = 1 // 闭卷考试
	AssessmentTag_ThesisExamination     AssessmentTag = 2 // 论文考核
	AssessmentTag_GroupReporting        AssessmentTag = 3 // 小组汇报
	AssessmentTag_NoAssessment          AssessmentTag = 4 // 无考核
)

// Enum value maps for AssessmentTag.
var (
	AssessmentTag_name = map[int32]string{
		0: "OpenBookExamination",
		1: "ClosedBookExamination",
		2: "ThesisExamination",
		3: "GroupReporting",
		4: "NoAssessment",
	}
	AssessmentTag_value = map[string]int32{
		"OpenBookExamination":   0,
		"ClosedBookExamination": 1,
		"ThesisExamination":     2,
		"GroupReporting":        3,
		"NoAssessment":          4,
	}
)

func (x AssessmentTag) Enum() *AssessmentTag {
	p := new(AssessmentTag)
	*p = x
	return p
}

func (x AssessmentTag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssessmentTag) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tag_v1_tag_proto_enumTypes[0].Descriptor()
}

func (AssessmentTag) Type() protoreflect.EnumType {
	return &file_proto_tag_v1_tag_proto_enumTypes[0]
}

func (x AssessmentTag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssessmentTag.Descriptor instead.
func (AssessmentTag) EnumDescriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{0}
}

type Biz int32

const (
	Biz_Course Biz = 0
)

// Enum value maps for Biz.
var (
	Biz_name = map[int32]string{
		0: "Course",
	}
	Biz_value = map[string]int32{
		"Course": 0,
	}
)

func (x Biz) Enum() *Biz {
	p := new(Biz)
	*p = x
	return p
}

func (x Biz) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Biz) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tag_v1_tag_proto_enumTypes[1].Descriptor()
}

func (Biz) Type() protoreflect.EnumType {
	return &file_proto_tag_v1_tag_proto_enumTypes[1]
}

func (x Biz) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Biz.Descriptor instead.
func (Biz) EnumDescriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{1}
}

type FeatureTag int32

const (
	FeatureTag_EasyToLearn                  FeatureTag = 0 // 课程简单易学
	FeatureTag_RichInContent                FeatureTag = 1 // 课程干货满满
	FeatureTag_Challenging                  FeatureTag = 2 // 课程很有挑战
	FeatureTag_RigorousAndResponsible       FeatureTag = 3 // 老师严谨负责
	FeatureTag_KindAndEasygoing             FeatureTag = 4 // 老师温柔随和
	FeatureTag_Humorous                     FeatureTag = 5 // 老师风趣幽默
	FeatureTag_LessHomework                 FeatureTag = 6 // 平时作业少
	FeatureTag_KeyPointsForFinal            FeatureTag = 7 // 期末划重点
	FeatureTag_ComprehensiveOnlineMaterials FeatureTag = 8 // 云课堂资料全
)

// Enum value maps for FeatureTag.
var (
	FeatureTag_name = map[int32]string{
		0: "EasyToLearn",
		1: "RichInContent",
		2: "Challenging",
		3: "RigorousAndResponsible",
		4: "KindAndEasygoing",
		5: "Humorous",
		6: "LessHomework",
		7: "KeyPointsForFinal",
		8: "ComprehensiveOnlineMaterials",
	}
	FeatureTag_value = map[string]int32{
		"EasyToLearn":                  0,
		"RichInContent":                1,
		"Challenging":                  2,
		"RigorousAndResponsible":       3,
		"KindAndEasygoing":             4,
		"Humorous":                     5,
		"LessHomework":                 6,
		"KeyPointsForFinal":            7,
		"ComprehensiveOnlineMaterials": 8,
	}
)

func (x FeatureTag) Enum() *FeatureTag {
	p := new(FeatureTag)
	*p = x
	return p
}

func (x FeatureTag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeatureTag) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tag_v1_tag_proto_enumTypes[2].Descriptor()
}

func (FeatureTag) Type() protoreflect.EnumType {
	return &file_proto_tag_v1_tag_proto_enumTypes[2]
}

func (x FeatureTag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeatureTag.Descriptor instead.
func (FeatureTag) EnumDescriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{2}
}

type AttachAssessmentTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaggerId int64           `protobuf:"varint,1,opt,name=tagger_id,json=taggerId,proto3" json:"tagger_id,omitempty"`
	Biz      Biz             `protobuf:"varint,2,opt,name=biz,proto3,enum=tag.v1.Biz" json:"biz,omitempty"`
	BizId    int64           `protobuf:"varint,3,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Tags     []AssessmentTag `protobuf:"varint,4,rep,packed,name=tags,proto3,enum=tag.v1.AssessmentTag" json:"tags,omitempty"`
}

func (x *AttachAssessmentTagsRequest) Reset() {
	*x = AttachAssessmentTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachAssessmentTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachAssessmentTagsRequest) ProtoMessage() {}

func (x *AttachAssessmentTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachAssessmentTagsRequest.ProtoReflect.Descriptor instead.
func (*AttachAssessmentTagsRequest) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{0}
}

func (x *AttachAssessmentTagsRequest) GetTaggerId() int64 {
	if x != nil {
		return x.TaggerId
	}
	return 0
}

func (x *AttachAssessmentTagsRequest) GetBiz() Biz {
	if x != nil {
		return x.Biz
	}
	return Biz_Course
}

func (x *AttachAssessmentTagsRequest) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *AttachAssessmentTagsRequest) GetTags() []AssessmentTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AttachAssessmentTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AttachAssessmentTagsResponse) Reset() {
	*x = AttachAssessmentTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachAssessmentTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachAssessmentTagsResponse) ProtoMessage() {}

func (x *AttachAssessmentTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachAssessmentTagsResponse.ProtoReflect.Descriptor instead.
func (*AttachAssessmentTagsResponse) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{1}
}

type AttachFeatureTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaggerId int64        `protobuf:"varint,1,opt,name=tagger_id,json=taggerId,proto3" json:"tagger_id,omitempty"`
	Biz      Biz          `protobuf:"varint,2,opt,name=biz,proto3,enum=tag.v1.Biz" json:"biz,omitempty"`
	BizId    int64        `protobuf:"varint,3,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Tags     []FeatureTag `protobuf:"varint,4,rep,packed,name=tags,proto3,enum=tag.v1.FeatureTag" json:"tags,omitempty"`
}

func (x *AttachFeatureTagsRequest) Reset() {
	*x = AttachFeatureTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachFeatureTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachFeatureTagsRequest) ProtoMessage() {}

func (x *AttachFeatureTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachFeatureTagsRequest.ProtoReflect.Descriptor instead.
func (*AttachFeatureTagsRequest) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{2}
}

func (x *AttachFeatureTagsRequest) GetTaggerId() int64 {
	if x != nil {
		return x.TaggerId
	}
	return 0
}

func (x *AttachFeatureTagsRequest) GetBiz() Biz {
	if x != nil {
		return x.Biz
	}
	return Biz_Course
}

func (x *AttachFeatureTagsRequest) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *AttachFeatureTagsRequest) GetTags() []FeatureTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AttachFeatureTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AttachFeatureTagsResponse) Reset() {
	*x = AttachFeatureTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachFeatureTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachFeatureTagsResponse) ProtoMessage() {}

func (x *AttachFeatureTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachFeatureTagsResponse.ProtoReflect.Descriptor instead.
func (*AttachFeatureTagsResponse) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{3}
}

type GetAssessmentTagsByTaggerBizRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaggerId int64 `protobuf:"varint,1,opt,name=tagger_id,json=taggerId,proto3" json:"tagger_id,omitempty"`
	Biz      Biz   `protobuf:"varint,2,opt,name=biz,proto3,enum=tag.v1.Biz" json:"biz,omitempty"`
	BizId    int64 `protobuf:"varint,3,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
}

func (x *GetAssessmentTagsByTaggerBizRequest) Reset() {
	*x = GetAssessmentTagsByTaggerBizRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssessmentTagsByTaggerBizRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssessmentTagsByTaggerBizRequest) ProtoMessage() {}

func (x *GetAssessmentTagsByTaggerBizRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssessmentTagsByTaggerBizRequest.ProtoReflect.Descriptor instead.
func (*GetAssessmentTagsByTaggerBizRequest) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{4}
}

func (x *GetAssessmentTagsByTaggerBizRequest) GetTaggerId() int64 {
	if x != nil {
		return x.TaggerId
	}
	return 0
}

func (x *GetAssessmentTagsByTaggerBizRequest) GetBiz() Biz {
	if x != nil {
		return x.Biz
	}
	return Biz_Course
}

func (x *GetAssessmentTagsByTaggerBizRequest) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

type GetAssessmentTagsByTaggerBizResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []AssessmentTag `protobuf:"varint,1,rep,packed,name=tags,proto3,enum=tag.v1.AssessmentTag" json:"tags,omitempty"`
}

func (x *GetAssessmentTagsByTaggerBizResponse) Reset() {
	*x = GetAssessmentTagsByTaggerBizResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssessmentTagsByTaggerBizResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssessmentTagsByTaggerBizResponse) ProtoMessage() {}

func (x *GetAssessmentTagsByTaggerBizResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssessmentTagsByTaggerBizResponse.ProtoReflect.Descriptor instead.
func (*GetAssessmentTagsByTaggerBizResponse) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{5}
}

func (x *GetAssessmentTagsByTaggerBizResponse) GetTags() []AssessmentTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetFeatureTagsByTaggerBizRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaggerId int64 `protobuf:"varint,1,opt,name=tagger_id,json=taggerId,proto3" json:"tagger_id,omitempty"`
	Biz      Biz   `protobuf:"varint,2,opt,name=biz,proto3,enum=tag.v1.Biz" json:"biz,omitempty"`
	BizId    int64 `protobuf:"varint,3,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
}

func (x *GetFeatureTagsByTaggerBizRequest) Reset() {
	*x = GetFeatureTagsByTaggerBizRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeatureTagsByTaggerBizRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureTagsByTaggerBizRequest) ProtoMessage() {}

func (x *GetFeatureTagsByTaggerBizRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureTagsByTaggerBizRequest.ProtoReflect.Descriptor instead.
func (*GetFeatureTagsByTaggerBizRequest) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{6}
}

func (x *GetFeatureTagsByTaggerBizRequest) GetTaggerId() int64 {
	if x != nil {
		return x.TaggerId
	}
	return 0
}

func (x *GetFeatureTagsByTaggerBizRequest) GetBiz() Biz {
	if x != nil {
		return x.Biz
	}
	return Biz_Course
}

func (x *GetFeatureTagsByTaggerBizRequest) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

type GetFeatureTagsByTaggerBizResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []FeatureTag `protobuf:"varint,1,rep,packed,name=tags,proto3,enum=tag.v1.FeatureTag" json:"tags,omitempty"`
}

func (x *GetFeatureTagsByTaggerBizResponse) Reset() {
	*x = GetFeatureTagsByTaggerBizResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeatureTagsByTaggerBizResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureTagsByTaggerBizResponse) ProtoMessage() {}

func (x *GetFeatureTagsByTaggerBizResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureTagsByTaggerBizResponse.ProtoReflect.Descriptor instead.
func (*GetFeatureTagsByTaggerBizResponse) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{7}
}

func (x *GetFeatureTagsByTaggerBizResponse) GetTags() []FeatureTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CountAssessmentTagsByCourseTaggerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId  int64   `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	TaggerIds []int64 `protobuf:"varint,3,rep,packed,name=tagger_ids,json=taggerIds,proto3" json:"tagger_ids,omitempty"`
}

func (x *CountAssessmentTagsByCourseTaggerRequest) Reset() {
	*x = CountAssessmentTagsByCourseTaggerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAssessmentTagsByCourseTaggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAssessmentTagsByCourseTaggerRequest) ProtoMessage() {}

func (x *CountAssessmentTagsByCourseTaggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAssessmentTagsByCourseTaggerRequest.ProtoReflect.Descriptor instead.
func (*CountAssessmentTagsByCourseTaggerRequest) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{8}
}

func (x *CountAssessmentTagsByCourseTaggerRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CountAssessmentTagsByCourseTaggerRequest) GetTaggerIds() []int64 {
	if x != nil {
		return x.TaggerIds
	}
	return nil
}

type CountAssessmentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   AssessmentTag `protobuf:"varint,1,opt,name=tag,proto3,enum=tag.v1.AssessmentTag" json:"tag,omitempty"`
	Count int64         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountAssessmentItem) Reset() {
	*x = CountAssessmentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAssessmentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAssessmentItem) ProtoMessage() {}

func (x *CountAssessmentItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAssessmentItem.ProtoReflect.Descriptor instead.
func (*CountAssessmentItem) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{9}
}

func (x *CountAssessmentItem) GetTag() AssessmentTag {
	if x != nil {
		return x.Tag
	}
	return AssessmentTag_OpenBookExamination
}

func (x *CountAssessmentItem) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CountAssessmentTagsByCourseTaggerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CountAssessmentItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CountAssessmentTagsByCourseTaggerResponse) Reset() {
	*x = CountAssessmentTagsByCourseTaggerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAssessmentTagsByCourseTaggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAssessmentTagsByCourseTaggerResponse) ProtoMessage() {}

func (x *CountAssessmentTagsByCourseTaggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAssessmentTagsByCourseTaggerResponse.ProtoReflect.Descriptor instead.
func (*CountAssessmentTagsByCourseTaggerResponse) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{10}
}

func (x *CountAssessmentTagsByCourseTaggerResponse) GetItems() []*CountAssessmentItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CountFeatureTagsByCourseTaggerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId  int64   `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	TaggerIds []int64 `protobuf:"varint,3,rep,packed,name=tagger_ids,json=taggerIds,proto3" json:"tagger_ids,omitempty"`
}

func (x *CountFeatureTagsByCourseTaggerRequest) Reset() {
	*x = CountFeatureTagsByCourseTaggerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountFeatureTagsByCourseTaggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountFeatureTagsByCourseTaggerRequest) ProtoMessage() {}

func (x *CountFeatureTagsByCourseTaggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountFeatureTagsByCourseTaggerRequest.ProtoReflect.Descriptor instead.
func (*CountFeatureTagsByCourseTaggerRequest) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{11}
}

func (x *CountFeatureTagsByCourseTaggerRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CountFeatureTagsByCourseTaggerRequest) GetTaggerIds() []int64 {
	if x != nil {
		return x.TaggerIds
	}
	return nil
}

type CountFeatureItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   FeatureTag `protobuf:"varint,1,opt,name=tag,proto3,enum=tag.v1.FeatureTag" json:"tag,omitempty"`
	Count int64      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountFeatureItem) Reset() {
	*x = CountFeatureItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountFeatureItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountFeatureItem) ProtoMessage() {}

func (x *CountFeatureItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountFeatureItem.ProtoReflect.Descriptor instead.
func (*CountFeatureItem) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{12}
}

func (x *CountFeatureItem) GetTag() FeatureTag {
	if x != nil {
		return x.Tag
	}
	return FeatureTag_EasyToLearn
}

func (x *CountFeatureItem) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CountFeatureTagsByCourseTaggerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CountFeatureItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CountFeatureTagsByCourseTaggerResponse) Reset() {
	*x = CountFeatureTagsByCourseTaggerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tag_v1_tag_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountFeatureTagsByCourseTaggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountFeatureTagsByCourseTaggerResponse) ProtoMessage() {}

func (x *CountFeatureTagsByCourseTaggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tag_v1_tag_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountFeatureTagsByCourseTaggerResponse.ProtoReflect.Descriptor instead.
func (*CountFeatureTagsByCourseTaggerResponse) Descriptor() ([]byte, []int) {
	return file_proto_tag_v1_tag_proto_rawDescGZIP(), []int{13}
}

func (x *CountFeatureTagsByCourseTaggerResponse) GetItems() []*CountFeatureItem {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_proto_tag_v1_tag_proto protoreflect.FileDescriptor

var file_proto_tag_v1_tag_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31,
	0x22, 0x9b, 0x01, 0x0a, 0x1b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x41, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x03, 0x62, 0x69, 0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x74, 0x61, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x7a, 0x52, 0x03, 0x62, 0x69, 0x7a, 0x12, 0x15, 0x0a, 0x06,
	0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x69,
	0x7a, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x1e,
	0x0a, 0x1c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x95,
	0x01, 0x0a, 0x18, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x03, 0x62, 0x69, 0x7a, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x7a, 0x52, 0x03, 0x62, 0x69, 0x7a, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74,
	0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61, 0x67,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x67, 0x65, 0x72,
	0x42, 0x69, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x67, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x61, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x03, 0x62, 0x69, 0x7a, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x7a, 0x52, 0x03, 0x62, 0x69, 0x7a, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x22, 0x51, 0x0a,
	0x24, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x67, 0x65, 0x72, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x75, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61,
	0x67, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x67, 0x65, 0x72, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x03, 0x62, 0x69, 0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b,
	0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x7a, 0x52, 0x03, 0x62, 0x69, 0x7a,
	0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x67, 0x65,
	0x72, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x61, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61, 0x67, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x22, 0x66, 0x0a, 0x28, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x54, 0x61, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x54, 0x0a, 0x13,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x27, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x29, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x54, 0x61, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x63, 0x0a, 0x25, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61,
	0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x67, 0x67,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x74, 0x61,
	0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x03, 0x74,
	0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x26, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x54, 0x61, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x2a, 0x80, 0x01, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x67, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x45,
	0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65,
	0x6e, 0x74, 0x10, 0x04, 0x2a, 0x11, 0x0a, 0x03, 0x42, 0x69, 0x7a, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x10, 0x00, 0x2a, 0xcc, 0x01, 0x0a, 0x0a, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x54, 0x61, 0x67, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x61, 0x73, 0x79, 0x54, 0x6f,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x69, 0x63, 0x68, 0x49,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x52,
	0x69, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x73, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x69, 0x6e, 0x64, 0x41,
	0x6e, 0x64, 0x45, 0x61, 0x73, 0x79, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x12, 0x0c, 0x0a,
	0x08, 0x48, 0x75, 0x6d, 0x6f, 0x72, 0x6f, 0x75, 0x73, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x4c,
	0x65, 0x73, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x10, 0x06, 0x12, 0x15, 0x0a,
	0x11, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65,
	0x6e, 0x73, 0x69, 0x76, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x73, 0x10, 0x08, 0x32, 0xc2, 0x05, 0x0a, 0x0a, 0x54, 0x61, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x41,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x23, 0x2e,
	0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x41, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x20, 0x2e,
	0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x79, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x67, 0x65, 0x72, 0x42,
	0x69, 0x7a, 0x12, 0x2b, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x54,
	0x61, 0x67, 0x67, 0x65, 0x72, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x67,
	0x65, 0x72, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61, 0x67, 0x73, 0x42,
	0x79, 0x54, 0x61, 0x67, 0x67, 0x65, 0x72, 0x42, 0x69, 0x7a, 0x12, 0x28, 0x2e, 0x74, 0x61, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61,
	0x67, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x67, 0x65, 0x72, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x54, 0x61,
	0x67, 0x67, 0x65, 0x72, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x88, 0x01, 0x0a, 0x21, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54,
	0x61, 0x67, 0x67, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x67, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x67, 0x67,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x1e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x67, 0x67, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x74,
	0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61,
	0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x74, 0x61,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x63, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x2e, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x54, 0x61, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x67,
	0x2f, 0x76, 0x31, 0x3b, 0x74, 0x61, 0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa,
	0x02, 0x06, 0x54, 0x61, 0x67, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x06, 0x54, 0x61, 0x67, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x12, 0x54, 0x61, 0x67, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x54, 0x61, 0x67, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_tag_v1_tag_proto_rawDescOnce sync.Once
	file_proto_tag_v1_tag_proto_rawDescData = file_proto_tag_v1_tag_proto_rawDesc
)

func file_proto_tag_v1_tag_proto_rawDescGZIP() []byte {
	file_proto_tag_v1_tag_proto_rawDescOnce.Do(func() {
		file_proto_tag_v1_tag_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_tag_v1_tag_proto_rawDescData)
	})
	return file_proto_tag_v1_tag_proto_rawDescData
}

var file_proto_tag_v1_tag_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_tag_v1_tag_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_tag_v1_tag_proto_goTypes = []interface{}{
	(AssessmentTag)(0),                                // 0: tag.v1.AssessmentTag
	(Biz)(0),                                          // 1: tag.v1.Biz
	(FeatureTag)(0),                                   // 2: tag.v1.FeatureTag
	(*AttachAssessmentTagsRequest)(nil),               // 3: tag.v1.AttachAssessmentTagsRequest
	(*AttachAssessmentTagsResponse)(nil),              // 4: tag.v1.AttachAssessmentTagsResponse
	(*AttachFeatureTagsRequest)(nil),                  // 5: tag.v1.AttachFeatureTagsRequest
	(*AttachFeatureTagsResponse)(nil),                 // 6: tag.v1.AttachFeatureTagsResponse
	(*GetAssessmentTagsByTaggerBizRequest)(nil),       // 7: tag.v1.GetAssessmentTagsByTaggerBizRequest
	(*GetAssessmentTagsByTaggerBizResponse)(nil),      // 8: tag.v1.GetAssessmentTagsByTaggerBizResponse
	(*GetFeatureTagsByTaggerBizRequest)(nil),          // 9: tag.v1.GetFeatureTagsByTaggerBizRequest
	(*GetFeatureTagsByTaggerBizResponse)(nil),         // 10: tag.v1.GetFeatureTagsByTaggerBizResponse
	(*CountAssessmentTagsByCourseTaggerRequest)(nil),  // 11: tag.v1.CountAssessmentTagsByCourseTaggerRequest
	(*CountAssessmentItem)(nil),                       // 12: tag.v1.CountAssessmentItem
	(*CountAssessmentTagsByCourseTaggerResponse)(nil), // 13: tag.v1.CountAssessmentTagsByCourseTaggerResponse
	(*CountFeatureTagsByCourseTaggerRequest)(nil),     // 14: tag.v1.CountFeatureTagsByCourseTaggerRequest
	(*CountFeatureItem)(nil),                          // 15: tag.v1.CountFeatureItem
	(*CountFeatureTagsByCourseTaggerResponse)(nil),    // 16: tag.v1.CountFeatureTagsByCourseTaggerResponse
}
var file_proto_tag_v1_tag_proto_depIdxs = []int32{
	1,  // 0: tag.v1.AttachAssessmentTagsRequest.biz:type_name -> tag.v1.Biz
	0,  // 1: tag.v1.AttachAssessmentTagsRequest.tags:type_name -> tag.v1.AssessmentTag
	1,  // 2: tag.v1.AttachFeatureTagsRequest.biz:type_name -> tag.v1.Biz
	2,  // 3: tag.v1.AttachFeatureTagsRequest.tags:type_name -> tag.v1.FeatureTag
	1,  // 4: tag.v1.GetAssessmentTagsByTaggerBizRequest.biz:type_name -> tag.v1.Biz
	0,  // 5: tag.v1.GetAssessmentTagsByTaggerBizResponse.tags:type_name -> tag.v1.AssessmentTag
	1,  // 6: tag.v1.GetFeatureTagsByTaggerBizRequest.biz:type_name -> tag.v1.Biz
	2,  // 7: tag.v1.GetFeatureTagsByTaggerBizResponse.tags:type_name -> tag.v1.FeatureTag
	0,  // 8: tag.v1.CountAssessmentItem.tag:type_name -> tag.v1.AssessmentTag
	12, // 9: tag.v1.CountAssessmentTagsByCourseTaggerResponse.items:type_name -> tag.v1.CountAssessmentItem
	2,  // 10: tag.v1.CountFeatureItem.tag:type_name -> tag.v1.FeatureTag
	15, // 11: tag.v1.CountFeatureTagsByCourseTaggerResponse.items:type_name -> tag.v1.CountFeatureItem
	3,  // 12: tag.v1.TagService.AttachAssessmentTags:input_type -> tag.v1.AttachAssessmentTagsRequest
	5,  // 13: tag.v1.TagService.AttachFeatureTags:input_type -> tag.v1.AttachFeatureTagsRequest
	7,  // 14: tag.v1.TagService.GetAssessmentTagsByTaggerBiz:input_type -> tag.v1.GetAssessmentTagsByTaggerBizRequest
	9,  // 15: tag.v1.TagService.GetFeatureTagsByTaggerBiz:input_type -> tag.v1.GetFeatureTagsByTaggerBizRequest
	11, // 16: tag.v1.TagService.CountAssessmentTagsByCourseTagger:input_type -> tag.v1.CountAssessmentTagsByCourseTaggerRequest
	14, // 17: tag.v1.TagService.CountFeatureTagsByCourseTagger:input_type -> tag.v1.CountFeatureTagsByCourseTaggerRequest
	4,  // 18: tag.v1.TagService.AttachAssessmentTags:output_type -> tag.v1.AttachAssessmentTagsResponse
	6,  // 19: tag.v1.TagService.AttachFeatureTags:output_type -> tag.v1.AttachFeatureTagsResponse
	8,  // 20: tag.v1.TagService.GetAssessmentTagsByTaggerBiz:output_type -> tag.v1.GetAssessmentTagsByTaggerBizResponse
	10, // 21: tag.v1.TagService.GetFeatureTagsByTaggerBiz:output_type -> tag.v1.GetFeatureTagsByTaggerBizResponse
	13, // 22: tag.v1.TagService.CountAssessmentTagsByCourseTagger:output_type -> tag.v1.CountAssessmentTagsByCourseTaggerResponse
	16, // 23: tag.v1.TagService.CountFeatureTagsByCourseTagger:output_type -> tag.v1.CountFeatureTagsByCourseTaggerResponse
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_tag_v1_tag_proto_init() }
func file_proto_tag_v1_tag_proto_init() {
	if File_proto_tag_v1_tag_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_tag_v1_tag_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachAssessmentTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachAssessmentTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachFeatureTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachFeatureTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssessmentTagsByTaggerBizRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssessmentTagsByTaggerBizResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeatureTagsByTaggerBizRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeatureTagsByTaggerBizResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAssessmentTagsByCourseTaggerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAssessmentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAssessmentTagsByCourseTaggerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountFeatureTagsByCourseTaggerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountFeatureItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tag_v1_tag_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountFeatureTagsByCourseTaggerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_tag_v1_tag_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_tag_v1_tag_proto_goTypes,
		DependencyIndexes: file_proto_tag_v1_tag_proto_depIdxs,
		EnumInfos:         file_proto_tag_v1_tag_proto_enumTypes,
		MessageInfos:      file_proto_tag_v1_tag_proto_msgTypes,
	}.Build()
	File_proto_tag_v1_tag_proto = out.File
	file_proto_tag_v1_tag_proto_rawDesc = nil
	file_proto_tag_v1_tag_proto_goTypes = nil
	file_proto_tag_v1_tag_proto_depIdxs = nil
}
